@using AdminPanel.Entities
@model Product

@{
    ViewBag.Title = "Create Product";
}

<script type="text/javascript">
    $(function () {

        // get typed price
        var checkProduct = function () {
            var productPrice = parseFloat(($('.price').val())).toFixed(2);

            // set product price as 0 if not typed
            if (productPrice == '') {
                productPrice = 0.00;
            }

            return productPrice;
        }

        // get typed discount
        var checkDiscount = function () {
            var discountPrice = parseFloat(($('.discount').val())).toFixed(2);

            // set product discount as 0 if not typed
            if (discountPrice == '') {
                discountPrice = 0.00;
            }

            return discountPrice;
        }

        var checkTotal = function(e) {
            if (e == 0) {
                $('#accept').attr('disabled', true);
            }
            else {
                $('#accept').attr('disabled', false);
            }
        }

        var countPrice = function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("calcPrice", "Home")',
                dataType: "json",
                data: {

                    // set product price as 0 if not typed
                    "total": checkProduct(),

                    // set product discount as 0 if not typed
                    "discount": checkDiscount()
                }
            }).done(function (result) {

                // display calculated price
                $('.prodPrice').html(result);

                // disable submit button if calculated price is 0 ( 100% discount )
                checkTotal(result);
            }).fail(function (result) {

                // display error alert if something is wrong
                alert("Error, contact with administrator.");
            })
        };

        window.onload = countPrice;
        $('.price').change(countPrice);
        $('.discount').change(countPrice);
    })

    // files input preview
    window.preview = function (input) {
        if (input.files && input.files[0]) {

            // delete old previews if added new images
            $("#previewImg").html("");

            $(input.files).each(function () {
                var reader = new FileReader();
                reader.readAsDataURL(this);
                reader.onload = function (e) {
                    $("#previewImg").append("<li><img class='productImage' src='" + e.target.result + "'></li>");
                }
            });
        }
    }
</script>

@using (Html.BeginForm("Create", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="well main">
            <fieldset>
                <legend>Create Product</legend>
                <div class="row">
                    <div class="col-md-offset-3 col-md-3">
                        @Html.ValidationMessageFor(model => model.ProductName)
                    </div>
                </div>
                <div class="form-group col-xs-12">
                    @Html.LabelFor(model => model.ProductName, new { @class = "requiredA col-md-offset-2 control-label col-md-1" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group col-xs-12">
                    @Html.LabelFor(model => model.Desc, new { @class = "col-md-offset-2 control-label col-md-1" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Desc, new { @class = "form-control" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-offset-3 col-md-3">
                        @Html.ValidationMessageFor(model => model.NormalPrice)
                    </div>
                </div>
                <div class="form-group col-xs-12">
                    @Html.LabelFor(model => model.NormalPrice, new { @class = "requiredA col-md-offset-2 control-label col-md-1" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.NormalPrice, new { @class = "form-control price" })
                    </div>
                </div>


                <div class="form-group col-xs-12">
                    @Html.LabelFor(model => model.Discount, new { @class = "col-md-offset-1 control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.Discount, new { @class = "discount form-control" })
                    </div>
                </div>

                <div class="form-group col-xs-12">
                    @Html.Label("After discount:", new { @class = "col-md-offset-1 control-label col-md-2" })
                    <div class="col-md-3 ">
                        <span class="prodPriceBox prodPrice text-center">Counting...</span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-offset-3 col-md-3">
                        @Html.ValidationMessageFor(model => model.Material)
                    </div>
                </div>
                <div class="form-group col-xs-12">
                    @Html.LabelFor(model => model.Material, new { @class = "requiredA col-md-offset-1 control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.Material, new { @class = "form-control" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-offset-3 col-md-3">
                        @Html.ValidationMessageFor(model => model.CategoryId)
                    </div>
                </div>
                <div class="form-group col-xs-12">
                    @Html.LabelFor(model => model.CategoryId, new { @class = "requiredA col-md-offset-1 control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>)ViewBag.DeliveryMethodID, String.Empty)
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-offset-3 col-md-3">
                        @Html.ValidationMessageFor(model => model.ColorId)
                    </div>
                </div>
                <div class="form-group col-xs-12">
                    @Html.LabelFor(model => model.ColorId, new { @class = "requiredA col-md-offset-1 control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("ColorId", (IEnumerable<SelectListItem>)ViewBag.DeliveryMethodID, String.Empty)
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-offset-3 col-md-3">
                        @Html.ValidationMessage("NoSelectedSize")
                    </div>
                </div>
                <div class="row text-center">
                    @Html.Label("Sizes (select at least one):", new { @class = "requiredA control-label col-md-offset-4 col-md-3" })
                </div>
                <div class="row form-group col-xs-12">
                    <div class="col-md-7 col-md-offset-4 col-sm-12 col-xs-12">
                        <table>
                            <tr>
                                @{
                                    int cnt = 0;
                                    foreach (var size in ViewBag.Sizes)
                                    {
                                        if (cnt++ % 7 == 0)
                                        {
                                            @:</tr><tr>
                                                }
                                        @:<td style="padding: 0px 10px">
                                            <input id="sizeCheck" type="checkbox" name="selectedSizes" value="@size.SizeId"
                                                   @(Html.Raw(size.Assigned ? "" : "checked=\"checked\"")) />
                                                @size.SizeId
                                                @:</td>
                                                }
                                    @:</tr>
                                }
                            </table>
                        </div>
                    </div>

                    <div class="row">
                        @Html.Label("Add images:", new { @class = "control-label col-md-2 col-md-offset-3" })
                        <input type='file' name="uploads" onchange="preview(this)" multiple="multiple" class="btn btn-info btn-xs" />
                    </div>
                    <div class="row">
                        @Html.Label("Product images:", new { @class = "control-label col-md-2" })
                        <ul class="aImagesList col-md-10" id='previewImg'> </ul>
                    </div>

                    <hr />
                    <div class="col-md-offset-4 col-md-4">
                        <div class="form-group col-xs-12">
                            <input type="submit" value="CONFIRM" id="accept" class="btn btn-success col-md-offset-2" />
                            @Html.ActionLink("CANCEL", "Index", "Home", null, new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
                                    }

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}